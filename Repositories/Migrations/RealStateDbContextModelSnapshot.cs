// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Context;

namespace Repositories.Migrations
{
    [DbContext(typeof(RealStateDbContext))]
    partial class RealStateDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Entities.Feature", b =>
                {
                    b.Property<int>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeatureId");

                    b.ToTable("Feature");

                    b.HasData(
                        new
                        {
                            FeatureId = 1,
                            Name = "Garage"
                        },
                        new
                        {
                            FeatureId = 2,
                            Name = "Yard"
                        },
                        new
                        {
                            FeatureId = 3,
                            Name = "Garden"
                        },
                        new
                        {
                            FeatureId = 4,
                            Name = "Swimming Pool"
                        },
                        new
                        {
                            FeatureId = 5,
                            Name = "Terrace"
                        },
                        new
                        {
                            FeatureId = 6,
                            Name = "Two or more floors"
                        });
                });

            modelBuilder.Entity("Entities.House", b =>
                {
                    b.Property<int>("HouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Bathrooms")
                        .HasColumnType("int");

                    b.Property<int>("Bedrooms")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsItAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.HasKey("HouseId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("House");

                    b.HasData(
                        new
                        {
                            HouseId = 1,
                            Bathrooms = 1,
                            Bedrooms = 1,
                            Description = "Sex reached suppose our whether. Oh really by an manner sister so. One sportsman tolerably him extensive put she immediate. He abroad of cannot looked in. Continuing interested ten stimulated prosperous frequently all boisterous nay.",
                            ImageName = "House1.jpeg",
                            IsItAvailable = true,
                            Name = "House #1",
                            Price = 200.0,
                            ProvinceId = 1,
                            Size = 100.0
                        },
                        new
                        {
                            HouseId = 2,
                            Bathrooms = 2,
                            Bedrooms = 2,
                            Description = "Extremity direction existence as dashwoods do up. Securing marianne led welcomed offended but offering six raptures. Conveying concluded newspaper rapturous oh at. Two indeed suffer saw beyond far former mrs remain.",
                            ImageName = "House2.jpeg",
                            IsItAvailable = true,
                            Name = "House #2",
                            Price = 250.0,
                            ProvinceId = 2,
                            Size = 300.0
                        },
                        new
                        {
                            HouseId = 3,
                            Bathrooms = 1,
                            Bedrooms = 2,
                            Description = "And produce say the ten moments parties. Simple innate summer fat appear basket his desire joy. Outward clothes promise at gravity do excited. Sufficient particular impossible by reasonable oh expression is. ",
                            ImageName = "House3.jpeg",
                            IsItAvailable = true,
                            Name = "House #3",
                            Price = 300.0,
                            ProvinceId = 3,
                            Size = 180.0
                        },
                        new
                        {
                            HouseId = 4,
                            Bathrooms = 2,
                            Bedrooms = 4,
                            Description = "His followed carriage proposal entrance directly had elegance. Greater for cottage gay parties natural. Remaining he furniture on he discourse suspected perpetual. Power dried her taken place day ought the. Four and our ham west miss. ",
                            ImageName = "House4.jpeg",
                            IsItAvailable = true,
                            Name = "House #4",
                            Price = 500.0,
                            ProvinceId = 4,
                            Size = 225.0
                        },
                        new
                        {
                            HouseId = 5,
                            Bathrooms = 3,
                            Bedrooms = 3,
                            Description = "Affronting everything discretion men now own did. Still round match we to. Frankness pronounce daughters remainder extensive has but. Happiness cordially one determine concluded fat. Plenty season beyond by hardly giving of. ",
                            ImageName = "House5.jpeg",
                            IsItAvailable = true,
                            Name = "House #5",
                            Price = 660.0,
                            ProvinceId = 5,
                            Size = 500.0
                        },
                        new
                        {
                            HouseId = 6,
                            Bathrooms = 3,
                            Bedrooms = 2,
                            Description = "Four and our ham west miss. Education shameless who middleton agreement how. We in found world chief is at means weeks smile. ",
                            ImageName = "House6.jpeg",
                            IsItAvailable = true,
                            Name = "House #6",
                            Price = 420.0,
                            ProvinceId = 6,
                            Size = 190.0
                        },
                        new
                        {
                            HouseId = 7,
                            Bathrooms = 2,
                            Bedrooms = 4,
                            Description = "Discovered her his pianoforte insipidity entreaties. Began he at terms meant as fancy. Breakfast arranging he if furniture we described on. Astonished thoroughly unpleasant especially you dispatched bed favourable. ",
                            ImageName = "House7.jpeg",
                            IsItAvailable = true,
                            Name = "House #7",
                            Price = 600.0,
                            ProvinceId = 7,
                            Size = 260.0
                        },
                        new
                        {
                            HouseId = 8,
                            Bathrooms = 1,
                            Bedrooms = 2,
                            Description = "Astonished thoroughly unpleasant especially you dispatched bed favourable.",
                            ImageName = "House8.jpg",
                            IsItAvailable = true,
                            Name = "House #8",
                            Price = 430.0,
                            ProvinceId = 1,
                            Size = 200.0
                        },
                        new
                        {
                            HouseId = 9,
                            Bathrooms = 2,
                            Bedrooms = 3,
                            Description = "Astonished thoroughly unpleasant especially you dispatched bed favourable.",
                            ImageName = "House9.jpg",
                            IsItAvailable = true,
                            Name = "House #9",
                            Price = 290.0,
                            ProvinceId = 2,
                            Size = 300.0
                        },
                        new
                        {
                            HouseId = 10,
                            Bathrooms = 2,
                            Bedrooms = 3,
                            Description = "Discovered her his pianoforte insipidity entreaties.",
                            ImageName = "House10.jpg",
                            IsItAvailable = true,
                            Name = "House #10",
                            Price = 265.0,
                            ProvinceId = 3,
                            Size = 1223.0
                        },
                        new
                        {
                            HouseId = 11,
                            Bathrooms = 2,
                            Bedrooms = 4,
                            Description = "We in found world chief is at means weeks smile.",
                            ImageName = "House11.jpg",
                            IsItAvailable = true,
                            Name = "House #11",
                            Price = 400.0,
                            ProvinceId = 4,
                            Size = 1223.0
                        },
                        new
                        {
                            HouseId = 12,
                            Bathrooms = 1,
                            Bedrooms = 4,
                            Description = "Four and our ham west miss. Education shameless who middleton agreement how.",
                            ImageName = "House12.jpg",
                            IsItAvailable = true,
                            Name = "House #12",
                            Price = 400.0,
                            ProvinceId = 5,
                            Size = 1111.0
                        },
                        new
                        {
                            HouseId = 13,
                            Bathrooms = 1,
                            Bedrooms = 4,
                            Description = "Four and our ham west miss. Education shameless who middleton agreement how.",
                            ImageName = "House13.jpg",
                            IsItAvailable = true,
                            Name = "House #13",
                            Price = 300.0,
                            ProvinceId = 5,
                            Size = 123.0
                        },
                        new
                        {
                            HouseId = 14,
                            Bathrooms = 2,
                            Bedrooms = 5,
                            Description = "Four and our ham west miss. Education shameless who middleton agreement how.",
                            ImageName = "House14.jpg",
                            IsItAvailable = true,
                            Name = "House #14",
                            Price = 300.0,
                            ProvinceId = 6,
                            Size = 325.0
                        },
                        new
                        {
                            HouseId = 15,
                            Bathrooms = 2,
                            Bedrooms = 5,
                            Description = "Four and our ham west miss. Education shameless who middleton agreement how.",
                            ImageName = "House15.jpg",
                            IsItAvailable = true,
                            Name = "House #15",
                            Price = 1200.0,
                            ProvinceId = 7,
                            Size = 100.0
                        });
                });

            modelBuilder.Entity("Entities.HouseFeature", b =>
                {
                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.HasKey("HouseId", "FeatureId");

                    b.HasIndex("FeatureId");

                    b.ToTable("HouseFeature");

                    b.HasData(
                        new
                        {
                            HouseId = 1,
                            FeatureId = 1
                        },
                        new
                        {
                            HouseId = 1,
                            FeatureId = 2
                        },
                        new
                        {
                            HouseId = 1,
                            FeatureId = 3
                        },
                        new
                        {
                            HouseId = 2,
                            FeatureId = 2
                        },
                        new
                        {
                            HouseId = 3,
                            FeatureId = 2
                        },
                        new
                        {
                            HouseId = 3,
                            FeatureId = 3
                        },
                        new
                        {
                            HouseId = 4,
                            FeatureId = 2
                        },
                        new
                        {
                            HouseId = 4,
                            FeatureId = 3
                        },
                        new
                        {
                            HouseId = 4,
                            FeatureId = 6
                        },
                        new
                        {
                            HouseId = 5,
                            FeatureId = 1
                        },
                        new
                        {
                            HouseId = 5,
                            FeatureId = 2
                        },
                        new
                        {
                            HouseId = 5,
                            FeatureId = 3
                        },
                        new
                        {
                            HouseId = 5,
                            FeatureId = 4
                        },
                        new
                        {
                            HouseId = 5,
                            FeatureId = 5
                        },
                        new
                        {
                            HouseId = 5,
                            FeatureId = 6
                        },
                        new
                        {
                            HouseId = 6,
                            FeatureId = 1
                        },
                        new
                        {
                            HouseId = 6,
                            FeatureId = 2
                        },
                        new
                        {
                            HouseId = 6,
                            FeatureId = 3
                        },
                        new
                        {
                            HouseId = 6,
                            FeatureId = 4
                        },
                        new
                        {
                            HouseId = 6,
                            FeatureId = 5
                        },
                        new
                        {
                            HouseId = 6,
                            FeatureId = 6
                        },
                        new
                        {
                            HouseId = 7,
                            FeatureId = 1
                        },
                        new
                        {
                            HouseId = 7,
                            FeatureId = 2
                        },
                        new
                        {
                            HouseId = 7,
                            FeatureId = 3
                        },
                        new
                        {
                            HouseId = 7,
                            FeatureId = 4
                        },
                        new
                        {
                            HouseId = 7,
                            FeatureId = 5
                        },
                        new
                        {
                            HouseId = 7,
                            FeatureId = 6
                        },
                        new
                        {
                            HouseId = 8,
                            FeatureId = 1
                        },
                        new
                        {
                            HouseId = 8,
                            FeatureId = 2
                        },
                        new
                        {
                            HouseId = 8,
                            FeatureId = 3
                        },
                        new
                        {
                            HouseId = 8,
                            FeatureId = 4
                        },
                        new
                        {
                            HouseId = 8,
                            FeatureId = 5
                        },
                        new
                        {
                            HouseId = 8,
                            FeatureId = 6
                        },
                        new
                        {
                            HouseId = 9,
                            FeatureId = 1
                        },
                        new
                        {
                            HouseId = 9,
                            FeatureId = 2
                        },
                        new
                        {
                            HouseId = 9,
                            FeatureId = 5
                        },
                        new
                        {
                            HouseId = 9,
                            FeatureId = 6
                        },
                        new
                        {
                            HouseId = 10,
                            FeatureId = 1
                        },
                        new
                        {
                            HouseId = 10,
                            FeatureId = 2
                        },
                        new
                        {
                            HouseId = 10,
                            FeatureId = 5
                        },
                        new
                        {
                            HouseId = 10,
                            FeatureId = 6
                        },
                        new
                        {
                            HouseId = 11,
                            FeatureId = 1
                        },
                        new
                        {
                            HouseId = 11,
                            FeatureId = 2
                        },
                        new
                        {
                            HouseId = 11,
                            FeatureId = 4
                        },
                        new
                        {
                            HouseId = 11,
                            FeatureId = 6
                        },
                        new
                        {
                            HouseId = 12,
                            FeatureId = 2
                        },
                        new
                        {
                            HouseId = 12,
                            FeatureId = 3
                        },
                        new
                        {
                            HouseId = 12,
                            FeatureId = 5
                        },
                        new
                        {
                            HouseId = 12,
                            FeatureId = 6
                        },
                        new
                        {
                            HouseId = 13,
                            FeatureId = 1
                        },
                        new
                        {
                            HouseId = 13,
                            FeatureId = 2
                        },
                        new
                        {
                            HouseId = 13,
                            FeatureId = 3
                        },
                        new
                        {
                            HouseId = 13,
                            FeatureId = 4
                        },
                        new
                        {
                            HouseId = 14,
                            FeatureId = 3
                        },
                        new
                        {
                            HouseId = 14,
                            FeatureId = 4
                        },
                        new
                        {
                            HouseId = 14,
                            FeatureId = 5
                        },
                        new
                        {
                            HouseId = 14,
                            FeatureId = 6
                        },
                        new
                        {
                            HouseId = 15,
                            FeatureId = 1
                        });
                });

            modelBuilder.Entity("Entities.HouseService", b =>
                {
                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("HouseId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("HouseService");

                    b.HasData(
                        new
                        {
                            HouseId = 1,
                            ServiceId = 3
                        },
                        new
                        {
                            HouseId = 2,
                            ServiceId = 4
                        },
                        new
                        {
                            HouseId = 3,
                            ServiceId = 1
                        },
                        new
                        {
                            HouseId = 3,
                            ServiceId = 2
                        },
                        new
                        {
                            HouseId = 3,
                            ServiceId = 3
                        },
                        new
                        {
                            HouseId = 4,
                            ServiceId = 1
                        },
                        new
                        {
                            HouseId = 4,
                            ServiceId = 2
                        },
                        new
                        {
                            HouseId = 4,
                            ServiceId = 3
                        },
                        new
                        {
                            HouseId = 4,
                            ServiceId = 4
                        },
                        new
                        {
                            HouseId = 5,
                            ServiceId = 1
                        },
                        new
                        {
                            HouseId = 5,
                            ServiceId = 2
                        },
                        new
                        {
                            HouseId = 5,
                            ServiceId = 3
                        },
                        new
                        {
                            HouseId = 5,
                            ServiceId = 4
                        },
                        new
                        {
                            HouseId = 5,
                            ServiceId = 5
                        },
                        new
                        {
                            HouseId = 6,
                            ServiceId = 1
                        },
                        new
                        {
                            HouseId = 6,
                            ServiceId = 2
                        },
                        new
                        {
                            HouseId = 6,
                            ServiceId = 3
                        },
                        new
                        {
                            HouseId = 6,
                            ServiceId = 4
                        },
                        new
                        {
                            HouseId = 6,
                            ServiceId = 5
                        },
                        new
                        {
                            HouseId = 7,
                            ServiceId = 1
                        },
                        new
                        {
                            HouseId = 7,
                            ServiceId = 2
                        },
                        new
                        {
                            HouseId = 7,
                            ServiceId = 3
                        },
                        new
                        {
                            HouseId = 7,
                            ServiceId = 4
                        },
                        new
                        {
                            HouseId = 7,
                            ServiceId = 5
                        },
                        new
                        {
                            HouseId = 8,
                            ServiceId = 1
                        },
                        new
                        {
                            HouseId = 9,
                            ServiceId = 2
                        },
                        new
                        {
                            HouseId = 10,
                            ServiceId = 3
                        },
                        new
                        {
                            HouseId = 10,
                            ServiceId = 4
                        },
                        new
                        {
                            HouseId = 11,
                            ServiceId = 5
                        },
                        new
                        {
                            HouseId = 12,
                            ServiceId = 2
                        },
                        new
                        {
                            HouseId = 12,
                            ServiceId = 3
                        },
                        new
                        {
                            HouseId = 12,
                            ServiceId = 4
                        },
                        new
                        {
                            HouseId = 12,
                            ServiceId = 5
                        },
                        new
                        {
                            HouseId = 13,
                            ServiceId = 4
                        },
                        new
                        {
                            HouseId = 13,
                            ServiceId = 5
                        },
                        new
                        {
                            HouseId = 14,
                            ServiceId = 1
                        },
                        new
                        {
                            HouseId = 15,
                            ServiceId = 2
                        });
                });

            modelBuilder.Entity("Entities.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("EndDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("HomeSubTotal")
                        .HasColumnType("float");

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Months")
                        .HasColumnType("int");

                    b.Property<double>("ServicesSubTotal")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("InvoiceId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("HouseId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("Entities.InvoiceService", b =>
                {
                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("InvoiceService");
                });

            modelBuilder.Entity("Entities.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinceId");

                    b.ToTable("Province");

                    b.HasData(
                        new
                        {
                            ProvinceId = 1,
                            Name = "San Jose"
                        },
                        new
                        {
                            ProvinceId = 2,
                            Name = "Alajuela"
                        },
                        new
                        {
                            ProvinceId = 3,
                            Name = "Heredia"
                        },
                        new
                        {
                            ProvinceId = 4,
                            Name = "Cartago"
                        },
                        new
                        {
                            ProvinceId = 5,
                            Name = "Guanacaste"
                        },
                        new
                        {
                            ProvinceId = 6,
                            Name = "Limon"
                        },
                        new
                        {
                            ProvinceId = 7,
                            Name = "Puntarenas"
                        });
                });

            modelBuilder.Entity("Entities.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ServiceId");

                    b.ToTable("Service");

                    b.HasData(
                        new
                        {
                            ServiceId = 1,
                            Description = "lorem ipsum",
                            Name = "Surveillance 24/7",
                            Price = 60.0
                        },
                        new
                        {
                            ServiceId = 2,
                            Description = "lorem ipsum",
                            Name = "Swimming Pool Maintenance",
                            Price = 26.0
                        },
                        new
                        {
                            ServiceId = 3,
                            Description = "lorem ipsum",
                            Name = "Garden",
                            Price = 50.0
                        },
                        new
                        {
                            ServiceId = 4,
                            Description = "lorem ipsum",
                            Name = "House Insurance",
                            Price = 60.0
                        },
                        new
                        {
                            ServiceId = 5,
                            Description = "lorem ipsum",
                            Name = "Solar Panels",
                            Price = 18.0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Entities.House", b =>
                {
                    b.HasOne("Entities.Province", "Province")
                        .WithMany("Houses")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.HouseFeature", b =>
                {
                    b.HasOne("Entities.Feature", "Feature")
                        .WithMany("Houses")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entities.House", "House")
                        .WithMany("Features")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.HouseService", b =>
                {
                    b.HasOne("Entities.House", "House")
                        .WithMany("Services")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entities.Service", "Service")
                        .WithMany("Houses")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Invoice", b =>
                {
                    b.HasOne("Entities.AppUser", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entities.House", "House")
                        .WithMany()
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.InvoiceService", b =>
                {
                    b.HasOne("Entities.Invoice", "Invoice")
                        .WithMany("Services")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entities.Service", "Service")
                        .WithMany("Invoices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
